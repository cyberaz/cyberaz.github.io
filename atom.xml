<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://cyberaz.github.io/</id>
    <title>Cyberaz</title>
    <updated>2020-05-13T07:23:14.345Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://cyberaz.github.io/"/>
    <link rel="self" href="https://cyberaz.github.io/atom.xml"/>
    <subtitle>温故而知新，远望以常新</subtitle>
    <logo>https://cyberaz.github.io/images/avatar.png</logo>
    <icon>https://cyberaz.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Cyberaz</rights>
    <entry>
        <title type="html"><![CDATA[Minimizing makespan on a single machine with release dates and inventory constraints]]></title>
        <id>https://cyberaz.github.io/post/minimizing-makespan-on-a-single-machine-with-release-dates-and-inventory-constraints/</id>
        <link href="https://cyberaz.github.io/post/minimizing-makespan-on-a-single-machine-with-release-dates-and-inventory-constraints/">
        </link>
        <updated>2020-05-13T07:09:31.000Z</updated>
        <content type="html"><![CDATA[<h1 id="highlights">Highlights</h1>
<ol>
<li>schedule jobs on a single machine with inventory and release date constraints</li>
<li>show that the problem is strongly NP-hard</li>
<li>propose two mixed-integer programming formulations</li>
<li>develop <strong>a branch-and-bound algorithm</strong> and <strong>a guess-and-check algorithm</strong></li>
<li>report on the computational results on a randomly generated dataset</li>
</ol>
<h1 id="abstract">Abstract</h1>
<h2 id="problem">Problem</h2>
<p>A single-machine scheduling problem with release dates and inventory constraints[^ 1 ] has a set of jobs must be performed. Each job is characterized by a processing time, a release date and an inventory modification(either positive or negative)[^ 2 ].</p>
<h2 id="aim">Aim</h2>
<p>The goal is to find a feasible sequence of jobs with the minimum makespan, which is the completion time of the latest job, while all release dates and inventory constraints are met.</p>
<h2 id="methods">Methods</h2>
<p>The paper introduces a time-indexed formulation and a sequence-based formulation, a branch-and-bound algorithm, and a dynamic-programming-based guess-and-check (GC) algorithm.</p>
<h2 id="result">Result</h2>
<p>The GC algorithm outperforms all other alternatives.</p>
<h1 id="introduction">Introduction</h1>
<p>The problem has some interesting applications in scheduling warehousing operations, where shipments arrive in a loading/unloading dock either to deliver (unload) or to pick up (load) a certain number of products. The warehouse includes a storage space that is used to store these products in inventory. Obviously, jobs with positive inventory modification imply unloading operations and jobs with negative inventory modification constitute loading operations.</p>
<p>[^ 1 ]:Inventory constraints are generalizations of non-renewable resource constraints.<br>
[^ 2 ]:A job with negative inventory modification can be processed only if the central inventory level is sufficiently high, and a job with positive inventory modification can be executed only if the inventory level is low enough.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://cyberaz.github.io/post/hello-gridea/</id>
        <link href="https://cyberaz.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>